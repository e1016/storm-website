import React from 'react'

import SyntaxHighlighter from 'react-syntax-highlighter/prism';
import { base16AteliersulphurpoolLight as theme } from 'react-syntax-highlighter/styles/prism';

const One = `
import Collection from 'storm-react-native'

// define our AsyncStorage name
const Users = new Collection('@users:store')

export {
  Users
}
`
const Two = `
  import { Users } from './Collections.js'
  ...

  ...
  constructor (props) {
    super(props)

    this.state = {
      name: 'Eliseo',
      age: 21,
      gender: 31
    }
  }

  componentDidMount () {
    Users.save({
      name: this.state.name,
      age: this.state.age,
      gender: this.state.gender
    })
    .then(data =>
      console.log(data)
    )
  }
  ...
`

const Three = `
{
  item: {
    name: 'Eliseo',
    age: 21,
    gender: 'M',
    _id: '12938129376'
  },
  store: [
    {
      name: 'Eliseo',
      age: 21,
      gender: 31,
      _id: '12938129376'
    },
    {
      name: 'Juan',
      age: 22,
      gender: 'M',
      _id: '49869418364'
    }
  ]
}
`

const Four = `
...
})
  .then(({ store }) => {
    // now store is avalible
    console.log(store)
  })
`

export default () => (
  <section className="main--info-section">
    <h1>Save</h1>

    <p>For save data, is avalible the <b>save</b> method, this method return a promise and need an JSON as parameter (don't use strings, arrays or any other)</p>
    <br />

    <p>Implementation, first we need create Collection in any file, in this case we will use <b>react-native-project/Collections.js</b> with the follow content.</p>

    <SyntaxHighlighter language="javascript" style={ theme }>
      { One }
    </SyntaxHighlighter>

    <p>On next we write in <b>react-native-app/App.js</b></p>

    <SyntaxHighlighter language="javascript" style={ theme }>
      { Two }
    </SyntaxHighlighter>

    <p><b>data</b> variable contains two parts <b>item</b> and <b>store</b>. imagine that there was already a saved user that was called Juan, so, <b>console.log(data)</b> prints:</p>

    <SyntaxHighlighter language="javascript" style={ theme }>
      { Three }
    </SyntaxHighlighter>

    <p>As you can see, item contains the last item saved (passed as argument in last save invoke), and store contains the complete collection. For last, you can see a filed name <b>_id</b> this is autogenerated and can be user for update collection later.</p>
    <br />

    <p>If you want access more fast to sore data can use destructiring in <b>then</b>, example.</p>

    <SyntaxHighlighter language="javascript" style={ theme }>
      { Four }
    </SyntaxHighlighter>

    <p>
      <small>
        <a target="_blank" href="https://github.com/e1016/storm-react-native/blob/master/lib/methods/Save.js">
          Check this in github
        </a>
      </small>
    </p>

  </section>
)
